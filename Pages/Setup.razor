@page "/setup"
@using System.IO
@using Bible_Blazer_PWA.Facades
@using Bible_Blazer_PWA.Services
@using Bible_Blazer_PWA.Services.MudBlazorHelpers
@using Bible_Blazer_PWA.Services.Parse
@using Bible_Blazer_PWA.Services.Readers
@using System.Text.Json
@using b2xtranslator.StructuredStorage.Reader
@using System.Net.Http
@using Bible_Blazer_PWA.Parameters
@using Bible_Blazer_PWA.DomainObjects
@using Services.Menu
@using Bible_Blazer_PWA
@inject MenuService menu
@inject DbParametersFacade dbParams
@inject Bible_Blazer_PWA.DataBase.DatabaseJSFacade db;
@inject IJSRuntime JS
@inject ISnackbar Snackbar

<MudExpansionPanels>
    <MudExpansionPanel>
        <TitleContent>
            <MudText Typo="Typo.h5">Визуальные</MudText>
        </TitleContent>
        <ChildContent>
            <EditForm Model=@ParametersFormData>
                <div class="card card-body col-lg-6 col-md-7 col-sm">
                    <table>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                    </table>
                </div>

                <div class="card card-body col-lg-6 col-md-7 col-sm">
                    <table>
                        <tr style="border-bottom:1px black solid;"><td colspan="2">Места Писания</td></tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                    </table>
                </div>

                <div class="card card-body col-lg-6 col-md-7 col-sm">
                    <table>
                        <tr style="border-bottom:1px black solid;"><td colspan="2">Уровень 1</td></tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td></td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr style="border-bottom:1px black solid;"><td colspan="2">Уровень 2</td></tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>


                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td></td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr style="border-bottom:1px black solid;"><td colspan="2">Уровень 3</td></tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td>
                            </td>
                        </tr>
                    </table>
                </div>
            </EditForm>
        </ChildContent>
    </MudExpansionPanel>
    <MudExpansionPanel>
        <TitleContent>
            <MudText Typo="Typo.h5">Импорт/Экспорт параметров</MudText>
        </TitleContent>
        <ChildContent>
            <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.ArrowDownward" @onclick="ExportParamsToFile" Color="Color.Primary">Скачать текущие параметры</MudButton>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />
            <InputFile id="parametersFileInput" OnChange="LoadParameters" hidden />
            <MudButton HtmlTag="label"
                       Variant="Variant.Filled"
                       Color="Color.Primary"
                       StartIcon="@Icons.Filled.CloudUpload"
                       for="parametersFileInput">
                Загрузить параметры из файла
            </MudButton>
        </ChildContent>
    </MudExpansionPanel>
    <MudExpansionPanel>
        <TitleContent>
            <MudText Typo="Typo.h5">Системное</MudText>
        </TitleContent>
        <ChildContent>
            <div class="card card-body col-lg-6 col-md-7 col-sm">
                <h5 class="card-title">Удалить Базу данных</h5>
                <button type="button" class="btn btn-danger" @onclick="DeleteDb">Удалить</button>
            </div>
        </ChildContent>
    </MudExpansionPanel>
</MudExpansionPanels>

@code
{
    ParametersModel ParametersFormData;








    IBrowserFile parametrsFile = null;

    public async Task DeleteDb()
    {
        await db.CallVoidDbAsync(null, "delete");
    }

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        ParametersFormData = dbParams.ParametersModel;
        menu.Title = "Параметры";
        menu.ClearMenuButtons();
    }

    public async Task ExportParamsToFile()
    {
        using var stream = await dbParams.ExportToJson();
        using var streamRef = new DotNetStreamReference(stream);
        await JS.InvokeVoidAsync("downloadFileFromStream", "Parameters.json", streamRef);
    }

    private async Task LoadParameters(InputFileChangeEventArgs e)
    {
        parametrsFile = e.File;
        await dbParams.ImportFromStream(parametrsFile.OpenReadStream());
        await ParametersFormData.InitFromDb();
        Snackbar.Add("Параметры загружены");
    }
}