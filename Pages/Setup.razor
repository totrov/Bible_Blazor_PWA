@page "/setup"
@using System.IO
@using Bible_Blazer_PWA.Facades
@using Bible_Blazer_PWA.Services
@using Bible_Blazer_PWA.Services.MudBlazorHelpers
@using Bible_Blazer_PWA.Services.Parse
@using Bible_Blazer_PWA.Services.Readers
@using System.Text.Json
@using b2xtranslator.StructuredStorage.Reader
@using System.Net.Http
@using Bible_Blazer_PWA.Parameters
@using Bible_Blazer_PWA.DomainObjects
@using Services.Menu
@using Bible_Blazer_PWA
@inject MenuService menu
@inject DbParametersFacade dbParams
@inject Bible_Blazer_PWA.DataBase.DatabaseJSFacade db;
@inject IJSRuntime JS
@inject ISnackbar Snackbar

<MudExpansionPanels>
    <MudExpansionPanel>
        <TitleContent>
            <MudText Typo="Typo.h5">Визуальные</MudText>
        </TitleContent>
        <ChildContent>
            <EditForm Model=@ParametersFormData>
                <div class="card card-body col-lg-6 col-md-7 col-sm">
                    <table>
                        <tr>
                            <td>Скрывать инструменты</td>
                            <td>
                                <InputCheckbox @bind-Value="@HideTools"></InputCheckbox>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudColorPicker Label="Цвет Фона (изменится после перехода на другую страницу)"
                                                @bind-Text="@ParametersFormData.MainBackground"
                                                Style="@($"background-color: {ParametersFormData.MainBackground};")" Placeholder="Выберите цвет" />
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudColorPicker Label="Цвет фона панели инструментов"
                                                @bind-Text="@ParametersFormData.ToolsBg"
                                                Style="@($"background-color: {ParametersFormData.ToolsBg};")" Placeholder="Выберите цвет" />
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudSlider @bind-Value="BlocksPadding" Min="0" Max="200" Step="5" Color="Color.Info">Внутренний отступ блоков: @ParametersFormData.BlocksPadding.ToString()</MudSlider>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudSlider @bind-Value="BlocksPaddingLeft" Min="0" Max="200" Step="5" Color="Color.Info">Внутренний отступ блоков слева: @ParametersFormData.BlocksPaddingLeft.ToString()</MudSlider>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudSlider @bind-Value="BlocksPaddingRight" Min="0" Max="200" Step="5" Color="Color.Info">Внутренний отступ блоков справа: @ParametersFormData.BlocksPaddingRight.ToString()</MudSlider>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudSwitch @bind-Checked="@ParametersFormData.HideBlocksBorders" Color="Color.Primary" Converter="@(new RegularStringToBoolConverter())">Скрывать границы блоков</MudSwitch>
                            </td>
                            <td>
                            </td>
                        </tr>
                    </table>
                </div>

                <div class="card card-body col-lg-6 col-md-7 col-sm">
                    <table>
                        <tr style="border-bottom:1px black solid;"><td colspan="2">Места Писания</td></tr>
                        <tr>
                            <td>
                                <MudSwitch @bind-Checked="@ParametersFormData.StartVersesOnANewLine"
                                           Color="Color.Primary" Converter="@(new RegularStringToBoolConverter())">Стихи с новой строки</MudSwitch>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudColorPicker Label="Цвет фона в местах Писания"
                                                @bind-Text="@ParametersFormData.BibleRefBgColor"
                                                Style="@($"background-color: {ParametersFormData.BibleRefBgColor};")" Placeholder="Выберите цвет" />
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudColorPicker Label="Цвет текста в местах Писания"
                                                @bind-Text="@ParametersFormData.BibleRefFontColor"
                                                Style="@($"background-color: {ParametersFormData.BibleRefFontColor};")" Placeholder="Выберите цвет" />
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudColorPicker Label="Цвет номеров стихов"
                                                @bind-Text="@ParametersFormData.BibleRefVersesNumbersColor"
                                                Style="@($"background-color: {ParametersFormData.BibleRefVersesNumbersColor};")" Placeholder="Выберите цвет" />
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudColorPicker Label="Цвет фона выделенных стихов"
                                                @bind-Text="@ParametersFormData.BibleRefHighlightColor"
                                                Style="@($"background-color: {ParametersFormData.BibleRefHighlightColor};")" Placeholder="Выберите цвет" />
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudColorPicker Label="Цвет текста выделенных стихов"
                                                @bind-Text="@ParametersFormData.BibleRefVersesIntervalsColor"
                                                Style="@($"background-color: {ParametersFormData.BibleRefVersesIntervalsColor};")" Placeholder="Выберите цвет" />
                            </td>
                            <td>
                            </td>
                        </tr>
                    </table>
                </div>

                <div class="card card-body col-lg-6 col-md-7 col-sm">
                    <table>
                        <tr style="border-bottom:1px black solid;"><td colspan="2">Уровень 1</td></tr>
                        <tr>
                            <td>
                                <MudColorPicker Label="Цвет фона в заголовке"
                                                @bind-Text="@ParametersFormData.FirstLevelBg"
                                                Style="@($"background-color: {ParametersFormData.FirstLevelBg};")" Placeholder="Выберите цвет" />
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudColorPicker Label="Цвет фона в теле"
                                                @bind-Text="@ParametersFormData.FirstLevelBodyBg"
                                                Style="@($"background-color: {ParametersFormData.FirstLevelBodyBg};")" Placeholder="Выберите цвет" />
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td><MudSwitch @bind-Checked="@ParametersFormData.FirstLevelFontWeight" Color="Color.Error" Converter="@(new BoldFontStringToBoolConverter())">Жирный шрифт</MudSwitch></td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudSlider @bind-Value="FirstLevelMarginTop" Min="0" Max="100" Step="5" Color="Color.Info">Отступ сверху: @ParametersFormData.FirstLevelMarginTop.ToString()</MudSlider>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr style="border-bottom:1px black solid;"><td colspan="2">Уровень 2</td></tr>
                        <tr>
                            <td>
                                <MudColorPicker Label="Цвет фона в заголовке"
                                                @bind-Text="@ParametersFormData.SecondLevelBg"
                                                Style="@($"background-color: {ParametersFormData.SecondLevelBg};")" Placeholder="Выберите цвет" />
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudColorPicker Label="Цвет фона в теле"
                                                @bind-Text="@ParametersFormData.SecondLevelBodyBg"
                                                Style="@($"background-color: {ParametersFormData.SecondLevelBodyBg};")" Placeholder="Выберите цвет" />
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td><MudSwitch @bind-Checked="@ParametersFormData.SecondLevelFontWeight" Color="Color.Error" Converter="@(new BoldFontStringToBoolConverter())">Жирный шрифт</MudSwitch></td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudSlider @bind-Value="SecondLevelMarginTop" Min="0" Max="100" Step="5" Color="Color.Info">Отступ сверху: @ParametersFormData.SecondLevelMarginTop.ToString()</MudSlider>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr style="border-bottom:1px black solid;"><td colspan="2">Уровень 3</td></tr>
                        <tr>
                            <td>
                                <MudColorPicker Label="Цвет фона в заголовке"
                                                @bind-Text="@ParametersFormData.ThirdLevelBg"
                                                Style="@($"background-color: {ParametersFormData.ThirdLevelBg};")" Placeholder="Выберите цвет" />
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudColorPicker Label="Цвет фона в теле"
                                                @bind-Text="@ParametersFormData.ThirdLevelBodyBg"
                                                Style="@($"background-color: {ParametersFormData.ThirdLevelBodyBg};")" Placeholder="Выберите цвет" />
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudSwitch @bind-Checked="@ParametersFormData.ThirdLevelFontWeight"
                                           Color="Color.Error" Converter="@(new BoldFontStringToBoolConverter())">Жирный шрифт</MudSwitch>
                            </td>
                            <td>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <MudSlider @bind-Value="ThirdLevelMarginTop" Min="0" Max="100" Step="5" Color="Color.Info">Отступ сверху: @ParametersFormData.ThirdLevelMarginTop.ToString()</MudSlider>
                            </td>
                            <td>
                            </td>
                        </tr>
                    </table>
                </div>
            </EditForm>
        </ChildContent>
    </MudExpansionPanel>
    <MudExpansionPanel>
        <TitleContent>
            <MudText Typo="Typo.h5">Импорт/Экспорт параметров</MudText>
        </TitleContent>
        <ChildContent>
            <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.ArrowDownward" @onclick="ExportParamsToFile" Color="Color.Primary">Скачать текущие параметры</MudButton>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />
            <InputFile id="parametersFileInput" OnChange="LoadParameters" hidden />
            <MudButton HtmlTag="label"
                       Variant="Variant.Filled"
                       Color="Color.Primary"
                       StartIcon="@Icons.Filled.CloudUpload"
                       for="parametersFileInput">
                Загрузить параметры из файла
            </MudButton>
        </ChildContent>
    </MudExpansionPanel>
    <MudExpansionPanel>
        <TitleContent>
            <MudText Typo="Typo.h5">Системное</MudText>
        </TitleContent>
        <ChildContent>
            <div class="card card-body col-lg-6 col-md-7 col-sm">
                <h5 class="card-title">Удалить Базу данных</h5>
                <button type="button" class="btn btn-danger" @onclick="DeleteDb">Удалить</button>
            </div>
        </ChildContent>
    </MudExpansionPanel>
</MudExpansionPanels>

@code
{
    ParametersModel ParametersFormData;
    private bool HideTools
    {
        get { return bool.Parse(ParametersFormData.HideTools); }
        set { ParametersFormData.HideTools = value.ToString(); }
    }

    private double BlocksPadding
    {
        get { return int.Parse(ParametersFormData.BlocksPadding); }
        set { ParametersFormData.BlocksPadding = value.ToString(); ParametersFormData.BlocksPaddingLeft = value.ToString(); }
    }

    private double BlocksPaddingLeft
    {
        get { return double.Parse(ParametersFormData.BlocksPaddingLeft); }
        set { ParametersFormData.BlocksPaddingLeft = value.ToString(); ParametersFormData.BlocksPaddingRight = value.ToString(); }
    }

    private double BlocksPaddingRight
    {
        get { return double.Parse(ParametersFormData.BlocksPaddingRight); }
        set { ParametersFormData.BlocksPaddingRight = value.ToString(); }
    }

    private int FirstLevelMarginTop
    {
        get { return int.Parse(ParametersFormData.FirstLevelMarginTop); }
        set { ParametersFormData.FirstLevelMarginTop = value.ToString(); }
    }

    private int SecondLevelMarginTop
    {
        get { return int.Parse(ParametersFormData.SecondLevelMarginTop); }
        set { ParametersFormData.SecondLevelMarginTop = value.ToString(); }
    }

    private int ThirdLevelMarginTop
    {
        get { return int.Parse(ParametersFormData.ThirdLevelMarginTop); }
        set { ParametersFormData.ThirdLevelMarginTop = value.ToString(); }
    }

    IBrowserFile parametrsFile = null;

    public async Task DeleteDb()
    {
        await db.CallVoidDbAsync(null, "delete");
    }

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        ParametersFormData = dbParams.ParametersModel;
        menu.Title = "Параметры";
        menu.ClearMenuButtons();
    }

    public async Task ExportParamsToFile()
    {
        using var stream = await dbParams.ExportToJson();
        using var streamRef = new DotNetStreamReference(stream);
        await JS.InvokeVoidAsync("downloadFileFromStream", "Parameters.json", streamRef);
    }

    private async Task LoadParameters(InputFileChangeEventArgs e)
    {
        parametrsFile = e.File;
        await dbParams.ImportFromStream(parametrsFile.OpenReadStream());
        await ParametersFormData.InitFromDb();
        Snackbar.Add("Параметры загружены");
    }
}