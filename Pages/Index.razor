@page "/"
@inject HttpClient Http
@inject BibleService bible
@inject IJSRuntime JS;
@using Bible_Blazer_PWA.DataBase;
@inject DatabaseJSFacade db;

<h1>Планы уроков церкви "Завет Христа"</h1>

@if (!bible.IsLoaded)
{
    <div class="container-fluid">
        <div class="row">
            <div class="col">
                После запуска приложения требуется какое-то время для того, чтобы загрузились стихи Библии. Обычно это занимает примерно одну минуту.
            </div>
        </div>
        <div class="row">
            <div class="col-sm">
                <div class="spinner-border ml-auto text-success" role="status" aria-hidden="true"></div>
            </div>
        </div>
    </div>
}
else
{
    <content>
        Загрузка завершена, можно пользоваться.
    </content>
}


@code {
    private BibleService.Verse[] verses;
    private BibleService.Book[] books;

    protected override async Task OnInitializedAsync()
    {
        if (!bible.IsLoaded)
        {
            Task verseTask = Task.Run(async () => { verses = await Http.GetFromJsonAsync<BibleService.Verse[]>("Assets/verses.json"); });
            Task bookTask = Task.Run(async () => { books = await Http.GetFromJsonAsync<BibleService.Book[]>("Assets/books.json"); });
            await Task.WhenAll(new[] { verseTask, bookTask }).ContinueWith((async) => { bible.Init(verses, books); });
        }

        if (!db.IsInitialized)
        {
            IndexedDBResultHandler handler = await db.Init(JS);
            handler.OnDbResultOK += StateHasChanged;
        }
    }

}




