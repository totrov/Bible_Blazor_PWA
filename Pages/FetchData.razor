@page "/fetchdata"
@inject HttpClient Http
@inject BibleService bible

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (!bible.IsLoaded)
{
    <p><em>Загрузка стихов Библии...</em></p>
}
else
{
    @bible.perfTest()
}


@code {
    private BibleService.WeatherForecast[] forecasts;
    private BibleService.Verse[] verses;
    private BibleService.Book[] books;

    protected override async Task OnInitializedAsync()
    {
        if (!bible.IsLoaded)
        {
            Task forecastTask = Task.Run(async () => { forecasts = await Http.GetFromJsonAsync<BibleService.WeatherForecast[]>("sample-data/weather.json"); });
            Task verseTask = Task.Run(async () => { verses = await Http.GetFromJsonAsync<BibleService.Verse[]>("Assets/verses.json"); });
            Task bookTask = Task.Run(async () => { books = await Http.GetFromJsonAsync<BibleService.Book[]>("Assets/books.json"); });
            await Task.WhenAll(new[] { forecastTask, verseTask, bookTask }).ContinueWith((async) => { bible.Init(forecasts, verses, books); });
        }
    }

}
