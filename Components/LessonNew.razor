@page "/lessonNew/{Id:int}/{UnitNumber:int}"
@inherits Bible_Blazer_PWA.Pages.ComponentWithDbInteractionBase
@namespace BibleComponents
@using System.Text.RegularExpressions
@inject HttpClient Http
@using Microsoft.Extensions.Logging;
@using Bible_Blazer_PWA.DomainObjects;
@if (lesson != null)
{
    var composite = lesson.GetComposite();
    <h3>@composite.Value</h3>
    foreach (LessonElementData data in composite.Children)
    {
        LessonElementData data1 = data;
        <LessonElement ElementData="data1"></LessonElement>
    }
    <NavLink class="nav-link" href="@($"/lessons")" Match="NavLinkMatch.All"><span class="oi oi-account-logout" aria-hidden="true"></span> Обратно к урокам</NavLink>
}

@code {
    [Parameter]
    public int Id { get; set; } = 0;

    [Parameter]
    public int UnitNumber { get; set; } = 1;

    protected LessonContainerDb lesson;

    async protected override Task OnParametersSetAsync()
    {
        TaskCompletionSource taskCompletionSource = new TaskCompletionSource();
        var unitId = Unit.GetShortNameByUnitNumber(UnitNumber);
        var idStringified = Id.ToString();

        var resultHandler = await DatabaseFacade.GetRecordFromObjectStoreByKey<LessonContainerDb>("lessons", unitId, Id.ToString());
        resultHandler.OnDbResultOK += () => { lesson = resultHandler.Result; taskCompletionSource.SetResult(); };
        await taskCompletionSource.Task;
    }
}
