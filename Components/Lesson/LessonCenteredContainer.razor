@namespace BibleComponents
@using Bible_Blazer_PWA.Components
@using Bible_Blazer_PWA.Components.Interactor.Menu;
@using Bible_Blazer_PWA.DataBase;
@using Bible_Blazer_PWA.Parameters;
@using Bible_Blazer_PWA.Services.Menu;
@using Bible_Blazer_PWA.ViewModels;
@using MudBlazor.Utilities;
@using Bible_Blazer_PWA.Components.Interactor
@inject MenuService menu;

@if (Visible)
{
    <MudDivider />
    <CenteredFixedContainer ref="child" Elevation="0" Bottom="IsBottom">
        @InteractionRender
    </CenteredFixedContainer>
}

@code {
    [Microsoft.AspNetCore.Components.Parameter]
    public bool Visible { get; set; }
    public bool IsBottom { get; set; }
    private RenderFragment? InteractionRender { get; set; }
    private CenteredFixedContainer child;

    public void SetInteractionModel(IInteractionModel model)
    {
        if (model == null)
        {
            InteractionRender = null;
            Visible = false;
            return;
        }

        Visible = true;

        if (model.IsBottom)
        {
            InteractionRender = builder =>
            {
                builder.OpenComponent(0, typeof(MudDivider));
                builder.CloseComponent();
                builder.OpenComponent(1, typeof(InteractionPanelMenu));
                builder.AddAttribute(2, "InteractionModel", model);
                builder.CloseComponent();
                builder.OpenComponent(3, typeof(MudDivider));
                builder.CloseComponent();
                builder.OpenComponent(4, model.ComponentType);
                builder.AddAttribute(5, "InteractionModel", model);
                builder.CloseComponent();
            };
            IsBottom = true;
        }
        else
        {
            InteractionRender = builder =>
            {
                builder.OpenComponent(0, typeof(MudDivider));
                builder.CloseComponent();
                builder.OpenComponent(1, typeof(MudDivider));
                builder.CloseComponent();
                builder.OpenComponent(2, model.ComponentType);
                builder.AddAttribute(3, "InteractionModel", model);
                builder.CloseComponent();
            };
            IsBottom = false;
        }
    }

    protected override void OnInitialized()
    {
        menu.SetLessonCenteredContainer(this);
        Visible = false;
    }

    public void Refresh()
    {
        StateHasChanged();
    }
}
