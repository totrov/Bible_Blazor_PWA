@using Bible_Blazer_PWA.Components.Interactor._SubComponents
@using Bible_Blazer_PWA.Services
@using Bible_Blazer_PWA.Parameters;
@using static Bible_Blazer_PWA.Components.Interactor.Youtube.YoutubeVideoInteractionModel;
@inherits InteractionComponentBase<YoutubeSetInteractionModel>

@inject YoutubeLinks YTLinks
@inject DbParametersFacade dbParamteres

<div style="@GetStyle">
    <MudContainer>
        @{
            bool divideMain = InteractionModel.Links.Select(l => l.IsMain).Distinct().Count() > 1;
        }

        @if(!divideMain)
        {
            @foreach (var link in InteractionModel.Links)
            {
                <InteractionLink OnClick="()=>YoutubeVideoInteractionModel.WithParameters<YoutubeSourceAndName>.ApplyToCurrentPanel(new(link.Url, link.Name), InteractionModel)">
                    @link.Name
                </InteractionLink>
                string linkName = @link.Name;
                string lessonNumber = link.LessonNumber;
                string unitId = link.UnitId;
                string url = link.Url;
                if (dbParamteres.ParametersModel.AdminMode)
                {
                    <MudButton OnClick="()=>YTLinks.DeleteWhere(l => l.Name == linkName && l.LessonNumber == lessonNumber && l.UnitId == unitId && l.Url == url)">✗</MudButton>
                }
                <br />
            }
        }
        else
        {
            <br />
            <MudText Color="Color.Primary">Основное видео</MudText>
            @foreach (var link in InteractionModel.Links.Where(l=>l.IsMain))
            {
                <InteractionLink OnClick="()=>YoutubeVideoInteractionModel.WithParameters<YoutubeSourceAndName>.ApplyToCurrentPanel(new(link.Url, link.Name), InteractionModel)">
                    @link.Name
                </InteractionLink>
                string linkName = @link.Name;
                string lessonNumber = link.LessonNumber;
                string unitId = link.UnitId;
                string url = link.Url;
                if (dbParamteres.ParametersModel.AdminMode)
                {
                    <MudButton OnClick="()=>YTLinks.DeleteWhere(l => l.Name == linkName && l.LessonNumber == lessonNumber && l.UnitId == unitId && l.Url == url)">✗</MudButton>
                }
                <br />
            }
                
            <MudDivider></MudDivider>
            <br />
            <MudText Color="Color.Primary">Дополнительные видео</MudText>
            @foreach (var link in InteractionModel.Links.Where(l => !l.IsMain))
            {
                <InteractionLink OnClick="()=>YoutubeVideoInteractionModel.WithParameters<YoutubeSourceAndName>.ApplyToCurrentPanel(new(link.Url, link.Name), InteractionModel)">
                    @link.Name
                </InteractionLink>
                string linkName = @link.Name;
                string lessonNumber = link.LessonNumber;
                string unitId = link.UnitId;
                string url = link.Url;
                if (dbParamteres.ParametersModel.AdminMode)
                {
                    <MudButton OnClick="()=>YTLinks.DeleteWhere(l => l.Name == linkName && l.LessonNumber == lessonNumber && l.UnitId == unitId && l.Url == url)">✗</MudButton>
                }
                <br />
            }
        }

        @if (dbParamteres.ParametersModel.AdminMode)
        {
            if (!AddMode)
            {
                <MudButton OnClick="()=>AddMode = true">+</MudButton>
            }
            else
            {
                <MudTextField @bind-Value="Name" Label="Заголовок" Variant="Variant.Text"></MudTextField>
                <MudTextField @bind-Value="URL" Label="Cсылка" Variant="Variant.Text"></MudTextField>
                <MudSwitch @bind-Checked="MainLesson" Label="Основной урок" />
                <MudSwitch @bind-Checked="AddFirst" Label="Вставить первым" Variant="Variant.Text" Min="0" />
                <MudButton OnClick="AddLink">✔</MudButton>
                <MudButton OnClick="AddModeOff">✘</MudButton>
            }
        }
    </MudContainer>
</div>

@code {
    public string Name { get; set; }
    public string URL { get; set; }
    public bool MainLesson { get; set; } = false;
    public bool AddFirst { get; set; } = false;
    public bool AddMode { get; set; }

    public void AddLink()
    {
        YTLinks.AddLink(Name, URL, InteractionModel.LessonNumber, InteractionModel.UnitId, MainLesson, AddFirst);
        AddModeOff();
        AddFirst = false;
        MainLesson = false;
    }

    public void AddModeOff()
    {
        AddMode = false;
        Name = "";
        URL = "";
        AddFirst = false;
        MainLesson = false;
    }
}
