@inherits InteractionComponentBase<Bible_Blazer_PWA.Components.Interactor.BibleViewer.BibleViewerInteractionModel>
@using Bible_Blazer_PWA.DataBase;
@using Bible_Blazer_PWA.Parameters;
@using Bible_Blazer_PWA.Services.TextHandlers;
@inject DataBase.DatabaseJSFacade db;
@inject BibleService Bible;
@inject DbParametersFacade DbParamFacade;


<MudPaper Outlined="true" Class="px-3 py-3" style="@GetStyle">
    <MudElement HtmlTag="h3">@($"{InteractionModel.BookShortName}.{InteractionModel.ChapterNumber}")</MudElement>
    <MudText Style="@GetFontSizeStyle">
        @if (RawHtml != null)
        {
            @((MarkupString)RawHtml)
        }
        else
        {
            <span>Загрузка...</span>
        }
    </MudText>
</MudPaper>

@code {
    #region Props

    string RawHtml { get; set; } = null;

    #endregion
    #region Processors
    private VersesTextHandler versesHandler;
    #endregion

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        versesHandler = new VersesTextHandler(parameters.BibleRefVersesNumbersColor);
        var bookId = await Bible.GetBookIdByShortNameAsync(InteractionModel.BookShortName);
        IEnumerable<BibleService.Verse> verses = await (await db.GetRangeFromObjectStoreByKey<BibleService.Verse>(
                    "verses", bookId, InteractionModel.ChapterNumber, 0, 999)).GetTaskCompletionSourceWrapper();

        RawHtml = versesHandler.GetHtmlFromVerses(verses, false, true);
    }
}
