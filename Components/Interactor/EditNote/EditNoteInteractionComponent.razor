@using Bible_Blazer_PWA.Parameters;
@using Bible_Blazer_PWA.ViewModels;
@using MudBlazor.Utilities;
@inject DbParametersFacade DbParameters;

<MudPaper Elevation="25" Class="pa-2" Style="height:100%;overflow-y: scroll;overflow-x:hidden;" Square=true>
    <MudIconButton Icon="@Icons.Filled.TextIncrease" OnClick="()=>{note.SetValue(note=>note.TextSize, note.TextSize+1);}"></MudIconButton>
    <MudIconButton Icon="@Icons.Filled.TextDecrease" OnClick="()=>{note.SetValue(note=>note.TextSize, note.TextSize-1);}"></MudIconButton>
    <MudColorPicker Label="Основной цвет" Value="_mainColor" ValueChanged="UpdateMainColor" DisableAlpha="true" ColorPickerView="ColorPickerView.Grid" />
    <MudColorPicker Label="Цвет текста" Value="_textColor" ValueChanged="UpdateTextColor" DisableAlpha="true" ColorPickerView="ColorPickerView.Grid" />
    <MudSlider @bind-Value="@NoteWidth" Min="30" Max="500" Step="10" Color="Color.Primary">Ширина: @InteractionModel.NoteModel.Width.ToString()</MudSlider>
    <MudSlider @bind-Value="@NoteHeight" Min="30" Max="500" Step="10" Color="Color.Primary">Высота: @InteractionModel.NoteModel.Height.ToString()</MudSlider>
    <MudSlider @bind-Value="@NoteOpacity" Min="0" Max="10" Step="1" Color="Color.Primary">Прозрачность: @InteractionModel.NoteModel.Opacity.ToString()</MudSlider>
    <MudRadioGroup Style="text-align: center;" T="NoteModel.NoteType" @bind-SelectedOption="@NoteType">
        <MudRadio Option="NoteModel.NoteType.Regular" Color="Color.Primary" UnCheckedColor="Color.Default">Заметка</MudRadio>
        <MudRadio Option="NoteModel.NoteType.Question" Color="Color.Success" UnCheckedColor="Color.Default">Вопрос</MudRadio>
        <MudRadio Option="NoteModel.NoteType.Attention" Color="Color.Secondary" UnCheckedColor="Color.Default">Важно!</MudRadio>
    </MudRadioGroup>
    <MudContainer Class="d-flex">
        <MudButton Icon="@Icons.Filled.RemoveCircle" OnClick="RemovePrompt" Color="Color.Error">Удалить заметку</MudButton>
        <MudSpacer></MudSpacer>
        <MudButton Icon="@Icons.Filled.RemoveCircle" OnClick="@(() => {InteractionModel.Close();})" Color="Color.Primary">Закрыть</MudButton>
    </MudContainer>
</MudPaper>
@code {
    [Microsoft.AspNetCore.Components.Parameter]
    public EditNoteModel InteractionModel { get; set; }

    private int NoteWidth { get => note.Width; set => note.SetValue(note => note.Width, value); }
    private int NoteHeight { get => note.Height; set => note.SetValue(note => note.Height, value); }
    private int NoteOpacity { get => note.Opacity; set => note.SetValue(note => note.Opacity, value); }
    private NoteModel note { get => InteractionModel.NoteModel; }
    private NoteModel.NoteType NoteType { get => note.Type; set => note.SetValue(note => note.Type, value); }

    public MudColor _mainColor = "#ffd700";
    public MudColor _textColor = "#111111";

    protected async override Task OnInitializedAsync()
    {
    }

    private void RemovePrompt()
    {
        InteractionModel.RemoveNote(InteractionModel.NoteModel);
    }

    public void UpdateMainColor(MudColor value)
    {
        _mainColor = value;
        note.SetValue(note => note.MainColor, value.ToString());
    }

    public void UpdateTextColor(MudColor value)
    {
        _textColor = value;
        note.SetValue(note => note.TextColor, value.ToString());
    }
}
