@using Bible_Blazer_PWA.DataSources;
@using static Bible_Blazer_PWA.Components.Interactor.LessonsInUnit.Interaction.LessonsInUnitInteractionModel;
@using static Bible_Blazer_PWA.Components.Interactor.LessonsInUnit.Interaction;
@inherits InteractionComponentBase<LessonUnitsInteractionModel>
@using static Bible_Blazer_PWA.DataSources.LessonDS;

<div style="@GetStyle">
    <MudContainer Class="px-3 py-3">
        @if (LessonUnits != null)
        {
            foreach (LessonUnit unit in LessonUnits)
            {
                <MudButton OnClick="@(() => LessonsInUnitInteractionModel.WithParameters<SelectedUnitId>.ApplyToCurrentPanel(new(unit.Id), InteractionModel))">@unit.Name</MudButton>
                <br />
            }
        }
    </MudContainer>
</div>

@code {
    public SortedSet<LessonUnit> LessonUnits { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        LessonUnits = new(
            await (await db.GetAllFromObjectStore<LessonUnit>("lessonUnits")).GetTaskCompletionSourceWrapper(),
            new BlockNameComparer());
    }

    class BlockNameComparer : LessonDS.BlockNameComparer, IComparer<LessonUnit>
    {
        public int Compare(LessonUnit x, LessonUnit y) => base.Compare(x.Name, y.Name);
    }
}
