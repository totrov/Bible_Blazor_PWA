@inherits InteractionComponentBase<Setup_UploadDownloadInteractionModel>

@using Bible_Blazer_PWA.DataBase.DTO;
@using Bible_Blazer_PWA.Parameters;
@using Bible_Blazer_PWA.Services;
@using Bible_Blazer_PWA.Services.Parse;
@inject DbParametersFacade dbParamteres;
@inject HttpClient Http
@inject ISnackbar Snackbar
@inject IDialogService DialogService
@inject IJSRuntime JS
@inject ImportExportService importExportService

<div style="@GetStyle">
    <MudContainer>
        <MudListItem Text="Скачать">
            <NestedList>
                <MudListItem>
                    <MudButton Variant="Variant.Text" EndIcon="@Icons.Material.Filled.SettingsApplications" @onclick="ExportParamsToFile">Параметры</MudButton>
                </MudListItem>
                <MudListItem>
                    <MudButton Variant="Variant.Text" EndIcon="@Icons.Filled.SpeakerNotes" @onclick="ExportNotesToFile">Заметки</MudButton>
                </MudListItem>
            </NestedList>
        </MudListItem>
        <MudListItem Text="Загрузить">
            <NestedList>
                <MudListItem>
                    <InputFile id="parametersFileInput" OnChange="LoadParameters" hidden />
                    <MudButton HtmlTag="label" Variant="Variant.Text" EndIcon="@Icons.Material.Filled.SettingsApplications" for="parametersFileInput">Параметры</MudButton>
                </MudListItem>
                <MudListItem>
                    <InputFile id="notesFileInput" OnChange="LoadNotes" hidden />
                    <MudButton HtmlTag="label" Variant="Variant.Text" EndIcon="@Icons.Filled.SpeakerNotes" for="notesFileInput">Заметки</MudButton>
                </MudListItem>
                <MudListItem>
                    <MudButton Variant="Variant.Text" EndIcon="@Icons.Material.Filled.UploadFile" OnClick="OpenManualLoadDialog">Уроки</MudButton>
                </MudListItem>
            </NestedList>
        </MudListItem>
    </MudContainer>
</div>

@code{
    private ParametersModel parametersModel;

    #region Import/Export

    private LessonImportService lessonImportService; //is it still used?

    private void OpenManualLoadDialog()
    {
        var parameters = new DialogParameters();
        parameters.Add("LessonImportService", lessonImportService);
        parameters.Add("DisableEnableAction", (bool b) =>
        {
            //TODO if anything needed
        });
        var options = new DialogOptions { CloseButton = true, CloseOnEscapeKey = true, DisableBackdropClick = true };
        DialogService.Show<ManualLessonLoadDialog>("Ручная загрузка уроков", parameters, options);
    }

    public async Task ExportParamsToFile()
    {
        await importExportService.ExportToJSON<DbParametersFacade.ParameterPOCO>("parameters");
    }

    public async Task ExportNotesToFile()
    {
        await importExportService.ExportToJSON<NoteDTO>("notes", true);
    }

    private async Task LoadNotes(InputFileChangeEventArgs e)
    {
        var notesFile = e.File;
        await importExportService.ImportFromStream(notesFile.OpenReadStream(), "notes");
        Snackbar.Add("Заметки загружены");
    }


    IBrowserFile parametrsFile = null;
    private async Task LoadParameters(InputFileChangeEventArgs e)
    {
        parametrsFile = e.File;
        await dbParamteres.ImportFromStream(parametrsFile.OpenReadStream());
        await parametersModel.InitFromDb();
        Snackbar.Add("Параметры загружены");
    }

    #endregion
    
    protected async override Task OnInitializedAsync()
    {
        parametersModel = dbParamteres.ParametersModel;
        lessonImportService = new LessonImportService(Snackbar, Http, new Corrector(new BibleRegexHelper(Http)), JS);
    }
}