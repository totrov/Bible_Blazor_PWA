@typeparam TInteractionModel
@inject Bible_Blazer_PWA.Parameters.DbParametersFacade DbParamFacade
@inject Bible_Blazer_PWA.DataBase.DatabaseJSFacade DataBase;
@implements IDisposable

@code {
    [Parameter]
    public TInteractionModel InteractionModel { get; set; }
    [Parameter]
    public InteractionPanel InteractionPanel { get; set; }

    #region Shortkeys
    protected Parameters.ParametersModel parameters => DbParamFacade.ParametersModel;
    protected Bible_Blazer_PWA.Parameters.DbParametersFacade dbParametersFacade => DbParamFacade;
    protected Bible_Blazer_PWA.DataBase.DatabaseJSFacade db => DataBase;
    #endregion

    public string SizePct { get; set; }

    #region Style

    public virtual string GetStyle
    {
        get => GetFontSizeStyle + GetFontColorStyle
             + GetBackgroundColorStyle
             + GetPanelRelatedStyle;
    }

    public virtual string GetFontSizeStyle        { get => $"font-size:{parameters.FontSize}px;"; }
    public virtual string GetBackgroundColorStyle { get => $"background-color:white;"; }
    public virtual string GetPanelRelatedStyle    { get => $"height:{SizePct};overflow-y:scroll;overflow-x:hidden;"; }
    public virtual string GetFontColorStyle       { get => $"color:{parameters.BibleRefFontColor};"; }

    #endregion

    protected void ResizeHandler(int size)
    {
        SizePct = Interaction.GetConfig().SizeMap[size][1];
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        var model = (IInteractionModel)InteractionModel;
        Interaction.OnResize += ResizeHandler;
        InteractionPanel?.OnChildInitialized();
    }

    void IDisposable.Dispose()
    {
        Interaction.OnResize -= ResizeHandler;
    }
}
